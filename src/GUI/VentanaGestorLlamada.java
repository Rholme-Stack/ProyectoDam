
package GUI;

import ConexionSql.ConexionSQL;
import crudpinguino.Cliente;
import crudpinguino.Incidencias;
import crudpinguino.Telefonos;
import java.awt.Color;
import java.awt.HeadlessException;
import java.sql.CallableStatement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Types;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;



/**
 *
 * @author Pc
 */
public class VentanaGestorLlamada extends javax.swing.JInternalFrame {

    
    ConexionSQL cc= new ConexionSQL();
    Connection con =cc.conexion();
     
    public VentanaGestorLlamada() {
        initComponents();
        mostrarDatos();
        jButtonSaveTel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelTipoLlamada = new javax.swing.JLabel();
        jComboBoxTipoLlamada = new javax.swing.JComboBox<>();
        jButtonNuevo = new javax.swing.JButton();
        jButtonNew = new javax.swing.JButton();
        jButtonEliminar = new javax.swing.JButton();
        jButtonActualizar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaComentarios = new javax.swing.JTextArea();
        jLabelComentarios = new javax.swing.JLabel();
        jButtonaAnadirTelefono = new javax.swing.JButton();
        jButtonRegistraLlamada = new javax.swing.JButton();
        jButtonSaveTel = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabelCodCliente = new javax.swing.JLabel();
        jTextFieldCodCliente = new javax.swing.JTextField();
        jLabelNombre = new javax.swing.JLabel();
        jTextFieldNombre = new javax.swing.JTextField();
        jLabelNombreCom = new javax.swing.JLabel();
        jTextFieldNombreComercial = new javax.swing.JTextField();
        jLabelTelefono = new javax.swing.JLabel();
        jTextFieldTelefono = new javax.swing.JTextField();
        jLabelContacto = new javax.swing.JLabel();
        jTextFieldContacto = new javax.swing.JTextField();
        jLabelEmail = new javax.swing.JLabel();
        jTextFieldEmail = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jButtonGuardar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableClientes = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableLlamadas = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabelBusqueda = new javax.swing.JLabel();
        jTextFieldBusqueda = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(153, 153, 153));
        setBorder(null);
        setClosable(true);
        setTitle("Gestor de llamadas");

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, 491, 10));

        jLabelTipoLlamada.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTipoLlamada.setText("Tipo de Llamada:");
        jPanel1.add(jLabelTipoLlamada, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, -1, -1));

        jComboBoxTipoLlamada.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CONSULTA B2B", "CONSULTA TALLER", "CONSULTA STOCK", "CONSULTA LOGISTICA" }));
        jPanel1.add(jComboBoxTipoLlamada, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, 165, -1));

        jButtonNuevo.setBackground(new java.awt.Color(51, 153, 255));
        jButtonNuevo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButtonNuevo.setForeground(new java.awt.Color(255, 255, 255));
        jButtonNuevo.setText("X");
        jButtonNuevo.setBorder(null);
        jButtonNuevo.setBorderPainted(false);
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonNuevo, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 40, 50, 30));

        jButtonNew.setText("Nuevo");
        jButtonNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNewActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonNew, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 100, 99, -1));

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 160, 99, -1));

        jButtonActualizar.setText("Actualizar");
        jButtonActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 190, 99, -1));

        jTextAreaComentarios.setColumns(20);
        jTextAreaComentarios.setLineWrap(true);
        jTextAreaComentarios.setRows(5);
        jTextAreaComentarios.setWrapStyleWord(true);
        jTextAreaComentarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextAreaComentariosKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(jTextAreaComentarios);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 460, 360, 140));

        jLabelComentarios.setForeground(new java.awt.Color(255, 255, 255));
        jLabelComentarios.setText("Comentarios:");
        jPanel1.add(jLabelComentarios, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 470, -1, -1));

        jButtonaAnadirTelefono.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonaAnadirTelefono.setText("...");
        jButtonaAnadirTelefono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonaAnadirTelefonoActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonaAnadirTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 220, -1, -1));

        jButtonRegistraLlamada.setText("Registrar Llamada");
        jButtonRegistraLlamada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistraLlamadaActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonRegistraLlamada, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 420, -1, -1));

        jButtonSaveTel.setText("AÃ±adir telefono");
        jButtonSaveTel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveTelActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonSaveTel, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 220, -1, -1));

        jPanel3.setBackground(new java.awt.Color(51, 153, 255));
        jPanel3.setLayout(new java.awt.GridLayout(6, 2, -100, 20));

        jLabelCodCliente.setForeground(new java.awt.Color(255, 255, 255));
        jLabelCodCliente.setText("Cod Cliente:");
        jPanel3.add(jLabelCodCliente);
        jPanel3.add(jTextFieldCodCliente);

        jLabelNombre.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNombre.setText("Nombre:");
        jPanel3.add(jLabelNombre);
        jPanel3.add(jTextFieldNombre);

        jLabelNombreCom.setForeground(new java.awt.Color(255, 255, 255));
        jLabelNombreCom.setText("Nombre Com:");
        jPanel3.add(jLabelNombreCom);
        jPanel3.add(jTextFieldNombreComercial);

        jLabelTelefono.setForeground(new java.awt.Color(255, 255, 255));
        jLabelTelefono.setText("Telefono:");
        jPanel3.add(jLabelTelefono);
        jPanel3.add(jTextFieldTelefono);

        jLabelContacto.setForeground(new java.awt.Color(255, 255, 255));
        jLabelContacto.setText("Contacto:");
        jPanel3.add(jLabelContacto);
        jPanel3.add(jTextFieldContacto);

        jLabelEmail.setForeground(new java.awt.Color(255, 255, 255));
        jLabelEmail.setText("Email:");
        jPanel3.add(jLabelEmail);
        jPanel3.add(jTextFieldEmail);

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 360, 300));
        jPanel1.add(jSeparator3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 392, 480, 10));

        jButtonGuardar.setText("Guardar");
        jButtonGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonGuardarMouseClicked(evt);
            }
        });
        jButtonGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 130, 99, -1));

        getContentPane().add(jPanel1, java.awt.BorderLayout.WEST);

        jPanel4.setBackground(new java.awt.Color(102, 102, 102));
        jPanel4.setLayout(new java.awt.BorderLayout());

        jPanel5.setBackground(new java.awt.Color(153, 153, 153));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jTableClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        jTableClientes.setRowHeight(22);
        jTableClientes.setSelectionBackground(new java.awt.Color(255, 99, 71));
        jTableClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableClientes);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel5.add(jScrollPane1, gridBagConstraints);

        jTableLlamadas = new javax.swing.JTable()
        {
            public boolean isCellEditable(int row, int column)
            {

                for (int i=0; i < jTableLlamadas.getRowCount(); i++)
                {
                    if (row==i)
                    {
                        return false;
                    }

                }
                return true;

            }
        };
        jTableLlamadas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableLlamadas.setRowHeight(22);
        jTableLlamadas.setSelectionBackground(new java.awt.Color(255, 99, 71));
        jTableLlamadas.setSelectionForeground(new java.awt.Color(255, 255, 254));
        jTableLlamadas.setShowGrid(false);
        jTableLlamadas.setShowHorizontalLines(true);
        jTableLlamadas.getTableHeader().setReorderingAllowed(false);
        jTableLlamadas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTableLlamadasFocusGained(evt);
            }
        });
        jTableLlamadas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableLlamadasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTableLlamadas);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel5.add(jScrollPane3, gridBagConstraints);

        jPanel4.add(jPanel5, java.awt.BorderLayout.CENTER);

        jPanel6.setBackground(new java.awt.Color(153, 153, 153));
        jPanel6.setPreferredSize(new java.awt.Dimension(799, 80));

        jLabelBusqueda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8_search_32px.png"))); // NOI18N

        jTextFieldBusqueda.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextFieldBusqueda.setToolTipText("Se puede buscar por nombre o telefono");
        jTextFieldBusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldBusquedaActionPerformed(evt);
            }
        });
        jTextFieldBusqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldBusquedaKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(jLabelBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel4.add(jPanel6, java.awt.BorderLayout.NORTH);

        getContentPane().add(jPanel4, java.awt.BorderLayout.CENTER);

        jPanel2.setBackground(new java.awt.Color(51, 153, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(20, 726));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 727, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, java.awt.BorderLayout.EAST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldBusquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldBusquedaKeyReleased
        filtrarDatos(jTextFieldBusqueda.getText());
    }//GEN-LAST:event_jTextFieldBusquedaKeyReleased

    private void jTextFieldBusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldBusquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldBusquedaActionPerformed

    private void jTableLlamadasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTableLlamadasFocusGained
        mostrarLlamadas();
    }//GEN-LAST:event_jTableLlamadasFocusGained

    private void jButtonSaveTelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveTelActionPerformed
        //Guarda tel contacto y email

        if(jTextFieldTelefono.getText().isEmpty() ){
            JOptionPane.showMessageDialog(this,"Campos requeridos: Telefono");
        }
        else{
            anadirTelefono();
            limpiarCajas();
            mostrarDatos();
        }
    }//GEN-LAST:event_jButtonSaveTelActionPerformed

    private void jButtonRegistraLlamadaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistraLlamadaActionPerformed
        // TODO add your handling code here:
        if(jTextFieldCodCliente.getText().isEmpty() || jTextFieldNombre.getText().isEmpty() ){
            JOptionPane.showMessageDialog(this,"Es necesario seleccionar un cliente.");
        }
        else{
            registroLlamada();
            mostrarLlamadas();
        }
       
    }//GEN-LAST:event_jButtonRegistraLlamadaActionPerformed

    private void jButtonaAnadirTelefonoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonaAnadirTelefonoActionPerformed
        if(jTextFieldCodCliente.getText().isEmpty() || jTextFieldNombre.getText().isEmpty() ){
            JOptionPane.showMessageDialog(this,"Selecciona un cliente para esta funciÃ³n!");
        }
        else{
            limpiarCajasTelefono();
        }
    }//GEN-LAST:event_jButtonaAnadirTelefonoActionPerformed

    private void jTextAreaComentariosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaComentariosKeyTyped

        // Limitar text area
        if(jTextAreaComentarios.getText().length()>=200){
            evt.consume();
        }
    }//GEN-LAST:event_jTextAreaComentariosKeyTyped

    private void jButtonActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonActualizarActionPerformed

        if(jTextFieldCodCliente.getText().isEmpty() || jTextFieldNombre.getText().isEmpty() ){

            JOptionPane.showMessageDialog(this,"Es necesario seleccionar un cliente.");
        }
        else{
            actualizarDatos(jTextFieldCodCliente.getText());
            actualizarTelefono();
            limpiarCajas();
            mostrarDatos();
        }
    }//GEN-LAST:event_jButtonActualizarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        //boton de eliminar

        if(jTextFieldCodCliente.getText().isEmpty() || jTextFieldNombre.getText().isEmpty() ){
            JOptionPane.showMessageDialog(this,"Es necesario seleccionar un cliente.");
        }
        else{

            int ventanaYesNotCancel = JOptionPane.showConfirmDialog(this, "Â¿Quieres eliminar este registro?", "AtenciÃ³n!", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);
            //0=yes, 1=no, 2=cancel
            if(ventanaYesNotCancel == 0) {
                eliminarRegistros();
                limpiarCajas();
                mostrarDatos();
                System.out.println("Has pulsado Yes");
            }else if(ventanaYesNotCancel == 1){
                System.out.println("Has pulsado No");

            }
        }

        // Saving code here
    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
        //boton para limpiar las cajas
        limpiarCajas();
        mostrarDatos();
    }//GEN-LAST:event_jButtonNuevoActionPerformed

    private void jTableLlamadasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLlamadasMouseClicked
        // Abre jdialog frame y mostra detalle llamada

        if (evt.getClickCount()==2){
            
            
           
            VisualizaLlamadas visualiza = new VisualizaLlamadas (null, true);
           
            

            int filaSeleccionada1=jTableLlamadas.rowAtPoint(evt.getPoint());
            VisualizaLlamadas.jLabelUsuario.setText(jTableLlamadas.getValueAt(filaSeleccionada1, 5).toString());
            VisualizaLlamadas.jLabelTipoLlamada.setText(jTableLlamadas.getValueAt(filaSeleccionada1, 1).toString());
            VisualizaLlamadas.jLabelFecha.setText(jTableLlamadas.getValueAt(filaSeleccionada1, 3).toString());
            VisualizaLlamadas.jLabelHora.setText(jTableLlamadas.getValueAt(filaSeleccionada1, 4).toString());
            VisualizaLlamadas.jTextArea1.setText(jTableLlamadas.getValueAt(filaSeleccionada1, 2).toString());
            VisualizaLlamadas.jLabelId.setText(jTableLlamadas.getValueAt(filaSeleccionada1, 0).toString());
            //visualiza.codCliente=jTextFieldCodCliente.getText();
            
            visualiza.setLocationRelativeTo(this);
            visualiza.setVisible(true);
            
           

        }

    }//GEN-LAST:event_jTableLlamadasMouseClicked

    private void jTableClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableClientesMouseClicked
        // Accion al seleccionar un cliente

        limpiarCajas();
        int filaSeleccionada=jTableClientes.rowAtPoint(evt.getPoint());

        jTextFieldCodCliente.setText(jTableClientes.getValueAt(filaSeleccionada, 0).toString());
        jTextFieldNombre.setText(jTableClientes.getValueAt(filaSeleccionada, 1).toString());
        jTextFieldNombreComercial.setText(jTableClientes.getValueAt(filaSeleccionada, 2).toString());
        jTextFieldTelefono.setText(jTableClientes.getValueAt(filaSeleccionada, 3).toString());
        jTextFieldContacto.setText(jTableClientes.getValueAt(filaSeleccionada, 4).toString());
        jTextFieldEmail.setText(jTableClientes.getValueAt(filaSeleccionada, 5).toString());

        mostrarLlamadas();
        //Al seleccionar una lÃ­nea limpia la caja de busqueda
        jTextFieldBusqueda.setText("");

    }//GEN-LAST:event_jTableClientesMouseClicked

    private void jButtonGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonGuardarActionPerformed
         if(jTextFieldCodCliente.getText().isEmpty() || jTextFieldNombre.getText().isEmpty() ){

            JOptionPane.showMessageDialog(this,"Campos requeridos: Codigo de cliente y Nombre");
        }
        else{
            consultaClienteProcedurfe();
            limpiarCajas();
            mostrarDatos();
        }
    }//GEN-LAST:event_jButtonGuardarActionPerformed

    private void jButtonNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNewActionPerformed
        //boton de limpiar registros "new"
           limpiarCajas();       
    }//GEN-LAST:event_jButtonNewActionPerformed

    private void jButtonGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonGuardarMouseClicked
        // TODO add your handling code here:
         // TODO add your handling code here:
       
    }//GEN-LAST:event_jButtonGuardarMouseClicked

    
    /*============FUNCIONES=============================================*/
    
    //funciones Insertar, deletar y actualizar datos
     
        public void filtrarDatos(String valor){
            
        
        
        String [] titulos= {"cod Cliente","Nombre", "Nombre_Comercial", "Telefono", "Contacto", "Email"};
        String [] registros= new String[6];
        DefaultTableModel modelo= new DefaultTableModel(null, titulos);
        
        //String SQL="SELECT * FROM clientes WHERE nombre LIKE '%"+valor+"%'" /*OR nombre_comercial LIKE '%"+valor+"%'" */;
        String SQL="SELECT clientes.cod_cliente, clientes.nombre, clientes.nombre_comercial, telefonos.telefono, telefonos.contacto_tel, telefonos.email FROM clientes LEFT JOIN telefonos ON clientes.cod_cliente = telefonos.cod_cliente "
                + "WHERE nombre LIKE '%"+valor+"%' OR telefono LIKE '%"+valor+"%' OR email LIKE '%"+valor+"%' ";
        try {
            
            Statement st= con.createStatement();
            ResultSet rs=st.executeQuery(SQL);
            
            while (rs.next()){
                
                registros [0]=rs.getString("clientes.cod_cliente");
                registros [1]=rs.getString("clientes.nombre");
                registros [2]=rs.getString("clientes.nombre_comercial");
                registros [3]=rs.getString("telefonos.telefono");
                registros [4]=rs.getString("telefonos.contacto_tel");
                registros [5]=rs.getString("telefonos.email");
                
                modelo.addRow(registros);
            
            }
            
            jTableClientes.setModel(modelo);
            
                    
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"no se ha podido subir los datos" + e.getMessage());
        }
        }
    
    
        public void eliminarRegistros(){
            
            
            
            int filaSeleccionada=jTableClientes.getSelectedRow();
            //Elimina tabla clientes
            try {
                String SQL= "DELETE FROM clientes WHERE cod_cliente= "+"\""+jTableClientes.getValueAt(filaSeleccionada, 0)+"\"" ;
                Statement st= con.createStatement();
                
                int n=st.executeUpdate(SQL);
                               
                if(n>=0){
                    JOptionPane.showMessageDialog(null,"Registro 'Cliente' Eliminado!");
                }                
            } catch (HeadlessException | SQLException e) {
                  JOptionPane.showMessageDialog(null,"Error al eliminar Registro 'Tabla Cliente'!" + e.getMessage());
            }
            //Elimina tabla Telefonos
            try {
                String SQL2= "DELETE FROM Telefonos WHERE cod_cliente= "+"\""+jTableClientes.getValueAt(filaSeleccionada, 0)+"\"" ;
                Statement st= con.createStatement();
                
                int n=st.executeUpdate(SQL2);
                               
                if(n>=0){
                    JOptionPane.showMessageDialog(null,"Registro 'Telefonos' Eliminado!");
                }                
            } catch (HeadlessException | SQLException e) {
                  JOptionPane.showMessageDialog(null,"Error al eliminar Registro 'Tabla Telefono'!" + e.getMessage());
            }
        }
        
    
    
        public void actualizarDatos(String codigo){
       
        try {
            Cliente actCliente = new Cliente(jTextFieldCodCliente.getText(),jTextFieldNombre.getText(), jTextFieldNombreComercial.getText());
            
            String SQL= "update clientes set cod_cliente=?, nombre=?, nombre_comercial=?where cod_cliente=?" ;
            
            
           int filaSeleccionada=jTableClientes.getSelectedRow();
           String dao=(String)jTableClientes.getValueAt(filaSeleccionada, 0);
            
            PreparedStatement pst=con.prepareStatement(SQL);
            
            pst.setString(1, actCliente.getCodCliente());
            pst.setString(2, actCliente.getNombre());
            pst.setString(3, actCliente.getNombreComercial());
            //pst.setString(4, actCliente.getContacto());
            
            pst.setString(4, dao);
            pst.execute();
            JOptionPane.showMessageDialog(this,"Registrado Actualizado");
         
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(this,"Error actualizar registro" + e.getMessage());
        }
        }
        
        public void actualizarTelefono(){
        
        try {
      
              ///ACTUALIZAR TELEFONO
          Telefonos actTelefono = new Telefonos(jTextFieldCodCliente.getText(), jTextFieldTelefono.getText(), jTextFieldContacto.getText(), jTextFieldEmail.getText());
            
            String SQL2= "update telefonos set telefono=?, contacto_tel=?, email=? where telefono=? and cod_cliente=?" ;
            
            int filaSeleccionada=jTableClientes.getSelectedRow();
           String dao=(String)jTableClientes.getValueAt(filaSeleccionada, 3);
           String dao2=(String)jTableClientes.getValueAt(filaSeleccionada, 0);
            
            PreparedStatement pst=con.prepareStatement(SQL2);
            pst.setString(1, actTelefono.getTelefono());
            pst.setString(2, actTelefono.getContactoTel());
            pst.setString(3, actTelefono.getEmail());
            
            pst.setString(4, dao);
            pst.setString(5, dao2);
            pst.execute();
            JOptionPane.showMessageDialog(this,"Registrado telefono Actualizado");
        
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null,"Error actualizar registro " + e.getMessage());
        }
    }
    
    
    
    public void limpiarCajas(){
        
          jTextFieldBusqueda.setText("");
          jTextFieldCodCliente.setText("");
          jTextFieldNombre.setText("");
          jTextFieldNombreComercial.setText("");
          jTextFieldTelefono.setText("");
          jTextFieldContacto.setText("");
          jTextFieldEmail.setText("");
          jTextAreaComentarios.setText("");
          //cambia color iniciales
          jTextFieldTelefono.setBackground(Color.white);
          jTextFieldContacto.setBackground(Color.white);
          jTextFieldEmail.setBackground(Color.white);
          //Config inicla botones
          jButtonNuevo.setVisible(true);
          jButtonNew.setVisible(true);
          jButtonEliminar.setVisible(true);
          jButtonActualizar.setVisible(true);
          jButtonaAnadirTelefono.setVisible(true);
          jButtonSaveTel.setVisible(false);
          jButtonRegistraLlamada.setVisible(true);
           
    }
    
    public void limpiarCajasTelefono(){
          
          jTextFieldTelefono.setText("");
          jTextFieldContacto.setText("");
          jTextFieldEmail.setText("");
          //cambia color
          jTextFieldTelefono.setBackground(Color.yellow);
          jTextFieldContacto.setBackground(Color.yellow);
          jTextFieldEmail.setBackground(Color.YELLOW);
          ///habilita el boton aÃ±adir tel y oculta el resto
          
          jButtonNuevo.setVisible(true);
          jButtonNew.setVisible(false);
          jButtonEliminar.setVisible(false);
          jButtonActualizar.setVisible(false);
          jButtonaAnadirTelefono.setVisible(false);
          jButtonSaveTel.setVisible(true);
          jButtonRegistraLlamada.setVisible(false);
    }
    
    public void consultaClienteProcedurfe(){
        
        try {
          CallableStatement cs = con.prepareCall("{call consulta_cliente (?,?)}");
          cs.setString(1,jTextFieldCodCliente.getText());
          cs.registerOutParameter(2, Types.INTEGER);
          cs.execute();
          int resultado = cs.getInt(2);
          if (resultado>1){
              insertarDatos();
              anadirTelefono();        
        }else{
              JOptionPane.showMessageDialog(this,"Este cliente ya existe en la tabla!"); 
          }

        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(this,"Error llamada Procedimiento 'Consulta_cliente'" + e.getMessage());
        } 
    }
    
    public void insertarDatos(){
        
      
              try {
            Cliente cliente = new Cliente(jTextFieldCodCliente.getText(),jTextFieldNombre.getText(), jTextFieldNombreComercial.getText());
            String SQL= "insert into clientes (cod_cliente, nombre, nombre_comercial) values(?,?,?)";
                   
            PreparedStatement pst=con.prepareStatement(SQL);
            
            pst.setString(1, cliente.getCodCliente());
            pst.setString(2, cliente.getNombre());
            pst.setString(3, cliente.getNombreComercial());
            
            pst.execute();
            JOptionPane.showMessageDialog(this,"Registrado contacto Correcto");
                      
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(this,"Error registro" + e.getMessage());
        } 
    }
    
    public void anadirTelefono(){
     
        try {
            Telefonos telefono = new Telefonos(jTextFieldCodCliente.getText(),jTextFieldTelefono.getText(), jTextFieldContacto.getText(), jTextFieldEmail.getText());
            String SQL= "insert into telefonos (cod_cliente, telefono, contacto_tel, email) values(?,?,?,?)";
            
            PreparedStatement pst=con.prepareStatement(SQL);
            
            pst.setString(1, telefono.getCod_cliente_Tel());
            pst.setString(2, telefono.getTelefono());
            pst.setString(3, telefono.getContactoTel());
            pst.setString(4, telefono.getEmail());
          
            pst.execute();
            JOptionPane.showMessageDialog(this,"Telefono Registrado Correctamente");
         
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(this,"Error registro telefono" + e.getMessage());
        }
    }
    
    //===========================================================================
    //funciones Mostrar llamadas Jtable superior
        
    public final void mostrarDatos(){
        String [] titulos= {"cod Cliente","Nombre", "Nombre_Comercial", "Telefono","Contacto", "Email"};
        String [] registros= new String[6];
        DefaultTableModel modelo= new DefaultTableModel(null, titulos);
        
        String SQL="SELECT clientes.cod_cliente, clientes.nombre, clientes.nombre_comercial, telefonos.telefono, telefonos.contacto_tel, telefonos.email FROM clientes LEFT JOIN telefonos ON clientes.cod_cliente = telefonos.cod_cliente";
        
        try {
            
            Statement st= con.createStatement();
            ResultSet rs=st.executeQuery(SQL);
            
            while (rs.next()){
                
                registros [0]=rs.getString("cod_cliente");
                registros [1]=rs.getString("nombre");
                registros [2]=rs.getString("nombre_comercial");
                registros [3]=rs.getString("telefono");
                registros [4]=rs.getString("contacto_tel");
                registros [5]=rs.getString("email");
                
                modelo.addRow(registros);
            
            }
            
            jTableClientes.setModel(modelo);
            
            TableColumnModel columnModel = jTableClientes.getColumnModel();

            columnModel.getColumn(0).setMaxWidth(90 );
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"no se ha podido subir los datos a la tabla" + e.getMessage());
        }
    }
    
    //===========================================================================
    ///funciones registro llamada
    public void registroLlamada(){
       /* String codCliente = "c99999";
        String tipoLlamada = "llamada test hibernate";
        String comentarios = "Llamada hibernate";
        String usuario = "usuario23";
        
        InsertHibernate(codCliente, tipoLlamada, comentarios, usuario);*/
        
        try {
            Incidencias incidencia = new Incidencias(jTextFieldCodCliente.getText(),jComboBoxTipoLlamada.getSelectedItem().toString(),jTextAreaComentarios.getText(), VentanaPrincipal.jLabelUsuario.getText());
            
            String SQL= "insert into registro_llamada (cod_cliente, tipo_llamada, comentarios, usuario) values(?,?,?,?)";
            
             PreparedStatement pst=con.prepareStatement(SQL);
            
            pst.setString(1, incidencia.getCod_Cliente_llamada());
            pst.setString(2, incidencia.getTipoLlamada());
            pst.setString(3, incidencia.getComentarios());
            pst.setString(4, incidencia.getUsuario());
          
            pst.execute();
            JOptionPane.showMessageDialog(this,"Registo Correcto");
            
            
        } catch (HeadlessException | SQLException e) {
            
             JOptionPane.showMessageDialog(this,"Error registro, tabla incidencias" + e.getMessage());
        }
        
        jTextAreaComentarios.setText(""); 
    }
    
     //===========================================================================
    ///funciones mostrar llamada jTable
    
    public void mostrarLlamadas(){
        String [] titulosLlamada= {"id","Tipo_Llamada", "Comentarios", "Fecha", "Hora", "Usuario"};
        String [] registrosLlamadas= new String[6];
        DefaultTableModel modeloLlamada= new DefaultTableModel(null, titulosLlamada);
                
        String SQL="SELECT registro_llamada.id, registro_llamada.tipo_llamada, registro_llamada.comentarios, registro_llamada.fecha, registro_llamada.hora, registro_llamada.usuario"
                + "  FROM registro_llamada WHERE registro_llamada.cod_cliente= '"+jTextFieldCodCliente.getText()+"' ORDER BY registro_llamada.fecha DESC, registro_llamada.hora  DESC";
        
        try {
            
            Statement st= con.createStatement();
            ResultSet rsLlamada=st.executeQuery(SQL);
            
            while (rsLlamada.next()){
                
                registrosLlamadas [0]=rsLlamada.getString("id");
                registrosLlamadas [1]=rsLlamada.getString("Tipo_Llamada");
                registrosLlamadas [2]=rsLlamada.getString("Comentarios");
                registrosLlamadas [3]=rsLlamada.getString( "Fecha");
                registrosLlamadas [4]=rsLlamada.getString("Hora");
                registrosLlamadas [5]=rsLlamada.getString("Usuario");
                
                modeloLlamada.addRow(registrosLlamadas);
            }
            
            jTableLlamadas.setModel(modeloLlamada);
            
            TableColumnModel columnModel = jTableLlamadas.getColumnModel();

            columnModel.getColumn(0).setMaxWidth(72);
            columnModel.getColumn(1).setPreferredWidth(250);
            columnModel.getColumn(2).setPreferredWidth(350);
            columnModel.getColumn(3).setMaxWidth(130);
            columnModel.getColumn(4).setMaxWidth(130);
            columnModel.getColumn(5).setMaxWidth(250);
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this,"no se ha podido subir los datos de llamadas" + e.getMessage());
        }
    }
    
 
    //==========================================================================

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonActualizar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonGuardar;
    private javax.swing.JButton jButtonNew;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JButton jButtonRegistraLlamada;
    private javax.swing.JButton jButtonSaveTel;
    private javax.swing.JButton jButtonaAnadirTelefono;
    private javax.swing.JComboBox<String> jComboBoxTipoLlamada;
    private javax.swing.JLabel jLabelBusqueda;
    private javax.swing.JLabel jLabelCodCliente;
    private javax.swing.JLabel jLabelComentarios;
    private javax.swing.JLabel jLabelContacto;
    private javax.swing.JLabel jLabelEmail;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelNombreCom;
    private javax.swing.JLabel jLabelTelefono;
    private javax.swing.JLabel jLabelTipoLlamada;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTableClientes;
    private javax.swing.JTable jTableLlamadas;
    private javax.swing.JTextArea jTextAreaComentarios;
    private javax.swing.JTextField jTextFieldBusqueda;
    public static javax.swing.JTextField jTextFieldCodCliente;
    private javax.swing.JTextField jTextFieldContacto;
    private javax.swing.JTextField jTextFieldEmail;
    public static javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldNombreComercial;
    private javax.swing.JTextField jTextFieldTelefono;
    // End of variables declaration//GEN-END:variables

    void setExtendedState(int MAXIMIZED_BOTH) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}


